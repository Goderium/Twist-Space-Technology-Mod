package com.Nxer.TwistSpaceTechnology.common.material;

import static gregtech.api.enums.OrePrefixes.nanite;

import java.util.Collections;

import goodgenerator.util.CharExchanger;
import gregtech.api.enums.Dyes;
import gregtech.api.enums.Materials;
import gregtech.api.enums.SubTag;
import gregtech.api.enums.TCAspects;
import gregtech.api.enums.TextureSet;
import gregtech.api.enums.TierEU;
import gregtech.api.interfaces.IMaterialHandler;
import gregtech.common.render.items.InfinityRenderer;

/**
 * Register new material here by Gregtech Material System
 */
public class MaterialsTST implements IMaterialHandler {

    public MaterialsTST() {
        Materials.add(this);
    }

    static final int offsetID = 260;
    // ID form 2242 ~ 2298 is available

    public static Materials NeutroniumAlloy = new Materials(
        offsetID,
        TextureSet.SET_SHINY,
        32.0F,
        98304000,
        18,
        1 | 2 | 32 | 64 | 128,
        217,
        220,
        203,
        0,
        "NeutroniumAlloy",
        "Neutronium Alloy",
        -1,
        -1,
        12000,
        12500,
        true,
        false,
        2,
        1,
        1,
        Dyes._NULL,
        Collections.singletonList(new TCAspects.TC_AspectStack(TCAspects.SENSUS, 1)))
            .disableAutoGeneratedBlastFurnaceRecipes()
            .disableAutoGeneratedVacuumFreezerRecipe()
            .setProcessingMaterialTierEU(TierEU.RECIPE_UEV)
            .setHasCorrespondingPlasma(false);
    public static Materials AxonisAlloy = new Materials(
        offsetID + 1,
        TextureSet.SET_SHINY,
        96.0F,
        98304000,
        18,
        1 | 2 | 32 | 64 | 128,
        197,
        67,
        36,
        0,
        "AxonisAlloy",
        "Axonis Alloy",
        -1,
        -1,
        13000,
        13200,
        true,
        false,
        2,
        1,
        1,
        Dyes._NULL,
        Collections.singletonList(new TCAspects.TC_AspectStack(TCAspects.SENSUS, 1)))
            .disableAutoGeneratedBlastFurnaceRecipes()
            .disableAutoGeneratedVacuumFreezerRecipe()
            .setProcessingMaterialTierEU(TierEU.RECIPE_UIV)
            .setHasCorrespondingPlasma(false);

    public static Materials Axonium = new Materials(
        offsetID + 2,
        TextureSet.SET_SHINY,
        480.0F,
        1048576000,
        24,
        1 | 2 | 32 | 64 | 128,
        243,
        45,
        27,
        0,
        "Axonium",
        "Axonium",
        -1,
        -1,
        1000,
        14000,
        true,
        false,
        2,
        1,
        1,
        Dyes._NULL,
        Collections.singletonList(new TCAspects.TC_AspectStack(TCAspects.SENSUS, 1)))
            .disableAutoGeneratedBlastFurnaceRecipes()
            .disableAutoGeneratedVacuumFreezerRecipe()
            .setProcessingMaterialTierEU(TierEU.RECIPE_UMV)
            .setHasCorrespondingPlasma(true);

    // register Extra Information
    static {
        nanite.mGeneratedItems.add(MaterialsTST.Axonium);

        NeutroniumAlloy.mChemicalFormula = "Nt\u2087Du\u2082Fl҉?";
        AxonisAlloy.mChemicalFormula = "۞\u2085(Hy⚶)\u2083⸎\u2082(IcMa)TbSh" + CharExchanger.shifter(9191);
        Axonium.mChemicalFormula = "A☀";

        SubTag.METAL.addTo(NeutroniumAlloy, AxonisAlloy, Axonium);
    }

    public static void initClient() {
        Axonium.renderer = new InfinityRenderer();
    }

    @Override
    public void onMaterialsInit() {

    }

}
