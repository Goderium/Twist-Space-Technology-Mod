package com.Nxer.TwistSpaceTechnology.common.material;

import java.util.Collections;

import gregtech.api.enums.Dyes;
import gregtech.api.enums.Materials;
import gregtech.api.enums.SubTag;
import gregtech.api.enums.TCAspects;
import gregtech.api.enums.TextureSet;
import gregtech.api.enums.TierEU;
import gregtech.common.render.items.InfinityRenderer;

/**
 * Register new material here by Gregtech Material System
 */
public class MaterialsTST {

    public static Materials NeutroniumAlloy;
    public static Materials AxonisAlloy;
    public static Materials Axonium;

    private static void loadMaterials() {
        final int offsetID_01 = 260;
        // ID form 2242 ~ 2298 is available

        NeutroniumAlloy = new Materials(
            offsetID_01,
            TextureSet.SET_SHINY,
            32.0F,
            98304000,
            18,
            1 | 2 | 32 | 64 | 128,
            217,
            220,
            203,
            0,
            "NeutroniumAlloy",
            "Neutronium Alloy",
            -1,
            -1,
            12000,
            12500,
            true,
            false,
            2,
            1,
            1,
            Dyes._NULL,
            Collections.singletonList(new TCAspects.TC_AspectStack(TCAspects.SENSUS, 1)))
                .disableAutoGeneratedBlastFurnaceRecipes()
                .disableAutoGeneratedVacuumFreezerRecipe()
                .setProcessingMaterialTierEU(TierEU.RECIPE_UEV)
                .setHasCorrespondingPlasma(false);
        NeutroniumAlloy.mChemicalFormula = "Nt\u2081\u2081(Ad\u2085Nq\u2082La\u2083)\u2082DuFl“â";

        Axonium = new Materials(
            offsetID_01 + 2,
            TextureSet.SET_SHINY,
            1.0F,
            8 * 2621440,
            26,
            1 | 2 | 32 | 64 | 128,
            243,
            45,
            27,
            0,
            "Axionium",
            "Axionium",
            -1,
            -1,
            1000,
            14000,
            true,
            false,
            2,
            1,
            1,
            Dyes._NULL,
            Collections.singletonList(new TCAspects.TC_AspectStack(TCAspects.SENSUS, 1)))
                .disableAutoGeneratedBlastFurnaceRecipes()
                .disableAutoGeneratedVacuumFreezerRecipe()
                .setProcessingMaterialTierEU(TierEU.RECIPE_UMV)
                .setHasCorrespondingPlasma(true);
        Axonium.mChemicalFormula = "Ax";
    }

    private static void initSubTag() {
        SubTag.METAL.addTo(NeutroniumAlloy);
    }

    public static void initClient() {
        Axonium.renderer=new InfinityRenderer();
    }

    public static void init() {
        loadMaterials();
        initSubTag();
    }
}
